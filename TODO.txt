- remplacer les "format" par des concaténations
- vérifier peer.serverAddress assignation partout!
- créer une compilation 64bits
- Vérifier les arguments
- Vérifier services web
- Vérifier que la surcharge std::exception::what par Exception fonctionne! (faire le tour de tous les try catch)
- corriger le systeme de LOG avec le nouveau code de formattage
- tester HelpFormatter
- enlever ApplicationKiller?
- tester vitesse logs
- checks waitForTerminationRequest linux et windows!
- checks thread name durant une session de debug
- verifier que le détecteur de fuite mémoire marche tjs
- mettre une extension aux logs (0.log)
- pour les "error LUA", mettre le path depuis "www" et pas le fullpath!
- Rendre thread-safe mes nouvelles classes sockets
- Réécrire l'API de la classe LOGS avec le travail de Thomas
- Faire en sorte que le comportement par defaut de logs soit un printf et pas un throw (remonté le systeme de MonaServer)
- Options, case sensitive??
- Update everywhere with Fix and ObjectFix
- void AMFReader::readTime(Time& time) -> Time& AMFReader::readTime(Time& time) ??
- Essayer d'encapsuler les MACRO lua quand possibles (Thomas avait raison!)
- supprimer tous les inline!
- Gérer l'exposant dans ToNumber
- Controler les "isBanned" depuis les scripts lua!
- faire le tour des insert pour essayer de les remplacer par des emplace
- Replacer les NULL et EMPTY (option) element par notre systeme
- Ecrire la macro ASSERT_FATAL et remplacer les derniers throw