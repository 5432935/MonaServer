<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600" layout="absolute">
	<fx:Declarations>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.containers.TitleWindow;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			// variables for the NetConnection, NetGroup, and GroupSpecifier
			private var _netConnection:NetConnection;
			private var _namePopup:TitleWindow;
			
			// send button handler
			private function send(event:Event):void {
				
				// Accept only <ENTER> key
				if (event is KeyboardEvent) {
					var eventKey:KeyboardEvent = event as KeyboardEvent;
					if (eventKey.keyCode != 13)
						return;
				}
				
				_netConnection.call("onMessage", null, message.text);
				message.text = "";
			}
			
			// connect button handler
			private function connect():void {
				
				// make a new NetConnection and connect
				_netConnection = new NetConnection();
				_netConnection.addEventListener(NetStatusEvent.NET_STATUS, onStatus);
				_netConnection.connect(address.text);
				_netConnection.client = this;
			}
			
			// Write message to the text area
			public function onReception(prompt:String, message:String):void {
				discussion.text += prompt + message + "\n";
			}
			
			// Try to identificate
			private function sendName(event:Event):void {
				
				// Accept only <ENTER> key
				if (event is KeyboardEvent) {
					var eventKey:KeyboardEvent = event as KeyboardEvent;
					if (eventKey.keyCode != 13)
						return;
				}
				
				var userName:TextInput = _namePopup.getChildByName("userName") as TextInput;
				if (userName != null && userName.text!="") {
					
					_netConnection.call("onIdentification", null, userName.text);
					PopUpManager.removePopUp(_namePopup);
				}
			}
			
			private function closeNamePopup(event:CloseEvent):void {
				
				PopUpManager.removePopUp(_namePopup);
			}
			
			// net status handler for the NetConnection
			private function onStatus(evt:NetStatusEvent):void {
				
				if (evt.info.code == "NetConnection.Connect.Success") {
					
					// create and configure the Identification Window
					_namePopup = new TitleWindow();
					_namePopup.title = "Please enter your name :";
					_namePopup.showCloseButton = true;
					_namePopup.addEventListener(CloseEvent.CLOSE, closeNamePopup);
					
					// create and configure a Label
					var userName:TextInput = new TextInput();
					userName.text = "User";
					userName.name = "userName";
					_namePopup.addChild(userName);
					// add buttons OK and Cancel
					var btOK:Button = new Button();
					btOK.label = "OK";
					btOK.addEventListener(MouseEvent.CLICK, sendName);
					btOK.addEventListener(KeyboardEvent.KEY_DOWN, sendName);
					_namePopup.addChild(btOK);
					
					// open the Identification Window as a modal popup window
					PopUpManager.addPopUp(_namePopup, this, true);
					PopUpManager.centerPopUp(_namePopup);
					
					userName.setFocus();
				}
			}
			
			
		]]>
	</fx:Script>
	<mx:TextInput x="10" y="10" width="400" text="rtmfp://localhost/clients/chat" id="address"/>
	<mx:Button x="430" y="10" label="Connect" click="connect()"/>
	
	<mx:TextArea x="10" y="40" height="400" width="500" text="" id="discussion" editable="false"/>
	
	<mx:TextInput x="10" y="460" width="400" id="message" keyDown="send(event)"/>
	<mx:Button x="430" y="460" label="Send" click="send(event)" keyDown="send(event)"/>
	
</mx:Application>